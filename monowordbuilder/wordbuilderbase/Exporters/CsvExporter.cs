//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text;

using Whee.WordBuilder.Model;
using Whee.WordBuilder.Helpers;

namespace Whee.WordBuilder.Exporters
{
	public class CsvExporter : IExporter
	{
		public CsvExporter ()
		{
		}
		
		#region IExporter implementation
		public void Export (System.Collections.Generic.List<Whee.WordBuilder.Model.Context> list, string path, IFileSystem fileSystem)
		{
			StringBuilder result = new StringBuilder();
			List<string> columns = new List<string>();
			columns.Add(".Word.");
			
        	foreach(Context ctx in list)
			{
				Dictionary<string, string> row = ToDictionary(ctx);
				
				foreach (string key in row.Keys)
				{
					if (!columns.Contains(key))
					{
						columns.Add(key);
					}	
				}

				foreach(string col in columns)
				{
					if (row.ContainsKey(col))
					{
						result.Append(row[col]);
					}
					result.Append(";");
				}
			
				if (result.Length > 0)	
				{
					result.Remove(result.Length - 1, 1);
				}
				result.AppendLine();
			}
			
			string header = string.Join(";", columns.ToArray());
			
			fileSystem.WriteAllText(path, header + Environment.NewLine + result.ToString());
		}
		
		private Dictionary<string, string> ToDictionary(Context ctx)
		{
        	Dictionary<string, string> result = new Dictionary<string, string>();

	        result.Add(".Word.", ctx.ToString());

    	    ApplyContext(ctx, result, "");

        	return result;
		}

		private void ApplyContext(Context ctx, Dictionary<string, string> dic, string prefix)
		{
			foreach(string m in ctx.Marks.Keys)
			{
				dic.Add(string.Concat(prefix, "!", m), ctx.Marks[m]);
			}
			
			foreach(string b in ctx.Branches.Keys)
			{
	            dic.Add(string.Concat(prefix, b), ctx.Branches[b].ToString());
    	        ApplyContext(ctx.Branches[b], dic, string.Concat(prefix, b, "."));
			}
		}

		public string Name {
			get {
				return "CSV";
			}
		}
		
		#endregion
	}
}
