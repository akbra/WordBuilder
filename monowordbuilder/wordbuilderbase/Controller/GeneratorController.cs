//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Text;

using Whee.WordBuilder.Project;
using Whee.WordBuilder.UIHelpers;

namespace Whee.WordBuilder.Controller
{
	public class GeneratorController
	{
		public GeneratorController(IResultViewHelper resultViewHelper, IClipBoardHelper clipBoardHelper)
		{
			m_ResultViewHelper = resultViewHelper;
			m_ClipBoardHelper = clipBoardHelper;
		}
		
		private IResultViewHelper m_ResultViewHelper;
		private IClipBoardHelper m_ClipBoardHelper;
		
		public void Clear()
		{
			m_ResultViewHelper.Clear();
		}
		
		public void Generate(Whee.WordBuilder.Project.Project project)
		{
			if (project.StartRules.Count == 0) {
				project.StartRules.Add("root", 100);
			}
			
			foreach (string ruleiter in project.StartRules.Keys) {
				for (int c = 1; c <= project.StartRules[ruleiter]; c++) {
					Context item = project.GetWord(ruleiter);
					m_ResultViewHelper.AddItem(item);
				}
			}
		}
		
		public void Copy()
		{
			StringBuilder sb = new StringBuilder();
			foreach (Context ctx in m_ResultViewHelper.GetSelectedItems())
			{
				sb.AppendLine(ctx.ToString());
			}
			
			sb.Remove(sb.Length - 2, 2);

			m_ClipBoardHelper.Copy(sb.ToString());
		}
		
		public void CopyDescription()
		{
			StringBuilder sb = new StringBuilder();
			foreach (Context ctx in m_ResultViewHelper.GetSelectedItems())
			{
				sb.AppendLine(ctx.Description(""));
			}
			
			sb.Remove(sb.Length - 2, 2);
			
			m_ClipBoardHelper.Copy(sb.ToString());
		}			
	}
}
